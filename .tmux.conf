setw -g mode-keys vi
# override tmux-sensible
set -g status-keys vi

# Add truecolor support
set -g default-terminal "xterm-256color"

set -g base-index 1
setw -g pane-base-index 1

set-option -g set-titles on
set-option -g set-titles-string "#S"
 
unbind C-b
set -g prefix C-a

# clear pane
bind-key U send-keys -R

# scrollback buffer size increase
set -g history-limit 100000

# Use up and down arrows for temporary "maximize"
unbind Up; bind Up resize-pane -Z; unbind Down; bind Down resize-pane -Z

# resize panes
bind -r H resize-pane -L 10
bind -r J resize-pane -D 10
bind -r K resize-pane -U 10
bind -r L resize-pane -R 10

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @open-S 'https://www.duckduckgo.com/'
# o - "open" a highlighted selection with the system default program. open for OS X or xdg-open for Linux
# Ctrl-o - open a highlighted selection with the $EDITOR
# Shift-s - search the highlighted selection directly inside a search engine
set -g @plugin 'tmux-plugins/tmux-sensible'

set -g @copycat_hash_search 'C-h'
set -g @plugin 'tmux-plugins/tmux-copycat'
# prefix + /  - regex search
# prefix + ctrl-u - url search (http, ftp and git urls)
# Enter - if you're using Tmux vi mode
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'knakayama/tmux-newline-detector'
# remove newline on single line copy

set -g @plugin 'laktak/extrakto'
set -g @extrakto_insert_key "enter"
set -g @extrakto_grab_area "window full"
# prefix + tab - autocomplete

set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-resurrect'
# prefix + Ctrl-s - save
# prefix + Ctrl-r - restore
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'timtyrrell/apprentice-tmux'
# set -g @plugin 'tmux-plugins/tmux-cpu'

# set -g @plugin 'timtyrrell/tmux-spotify-display'
set -g @plugin 'timtyrrell/tmux-spotify-controls'

# set -g status-right "♫ #{music_status} #{artist} - #{track} |#{cpu_fg_color} #{cpu_icon} #{ram_fg_color} #{ram_icon} "
# set -g status-right "♫ #{music_status} #{artist} - #{track} "
# set -g status-right "#{cpu_icon} #{ram_fg_color} #{ram_icon} "
# set -g status-right ""
set-option -g status off

if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"
set-hook -g window-linked 'if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"'
set-hook -g window-unlinked 'if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"'

# tmux-resurrect
set -g @resurrect-strategy-nvim 'session'
set -g @continuum-restore 'on'

# fuzzy select session
bind s split-window -v "tmux list-sessions -F '#{session_activity}:#{session_name}' | sort -nr | cut -d ':' -f 2 | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"
# bind g display-popup -d '#{pane_current_path}' -E -K -R "$HOME/.tmux/plugins/extrakto/scripts/tmux-extrakto.sh" -h 90% -w 90% -yC -xC
# bind g display-popup -d "tmux list-sessions -F '#{session_activity}:#{session_name}' | sort -nr | cut -d ':' -f 2 | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t' -E -K -R " -h 90% -w 90% -yC -xC
# bind g display-popup -EKR "tmux list-sessions -F '#{session_activity}:#{session_name}' | sort -nr | cut -d ':' -f 2 | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t" -h 90% -w 90% -yC -xC

# Smart pane switching with awareness of Vim splits and fzf.
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim || $is_fzf" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim || $is_fzf" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\\ select-pane -l

### floating windows

# if true, detach-client (you will be in floating window, so detach from that.. close popup and back to orig)
bind g if-shell -F '#{==:#S,shell-config}' {
    detach-client
} {
    set -gF '@last_session_name' '#S'
    popup -d '#{pane_current_path}' -xC -yC -w80% -h80% -KER 'tmux new -A -s shell-config \
    "tmux set -w pane-border-status off; zsh"'
}

# if true, break-pane (break out the current pane into a new window)
bind ! if-shell -F '#{!=:#S,shell-config}' {
    break-pane
} {
    set -uw pane-border-status
    run-shell 'bash -c "tmux break-pane -s shell-config -t \"$(tmux show -gvq '@last_session_name'):\""'
}

# if true, Same as ! mapping, just that focus does not shift to the broken pane after it moves to new window
bind @ if-shell -F '#{!=:#S,shell-config}' {
    break-pane -d
} {
    set -uw pane-border-status
    run-shell 'bash -c "tmux break-pane -d -s shell-config -t \"$(tmux show -gvq '@last_session_name'):\""'
}

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
