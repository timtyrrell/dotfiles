setw -g mode-keys vi
set -g status-keys vi

# set -g extended-keys on

# Add truecolor support
set-option -g default-terminal "tmux-256color"
# set -g default-terminal "xterm-256color"

# upgrade $TERM, this seems wrong but works
set -g default-terminal "screen-256color"
# set-option -g default-terminal "xterm-kitty"
# set-option -sa terminal-overrides ",xterm-256color:RGB"
# set-option -sa terminal-overrides ",xterm*:Tc,kitty*:Tc"
# set-option -as terminal-features ',xterm-kitty:RGB'

# https://github.com/folke/tokyonight.nvim#making-undercurls-work-properly-in-tmux
# set -g default-terminal "${TERM}"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

set -g base-index 1
setw -g pane-base-index 1
set -g pane-border-format "#P: #{pane_current_command}"

set-option -g set-titles on
set-option -g set-titles-string "#S"
 
unbind-key C-b
set -g prefix C-a

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# tmux messages are displayed for 4 seconds
set -g display-time 4000

# refresh 'status-left' and 'status-right' more often
set -g status-interval 5

# set only on OS X where it's required
set -g default-command "reattach-to-user-namespace -l $SHELL"

# focus events enabled for terminals that support them
set -g focus-events on

# super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# easier and faster switching between next/prev window
bind-key C-p previous-window
bind-key C-n next-window

# Ctrl-a + a` switches between alternate windows.
bind-key C-a send-prefix
bind-key a last-window

# reload tmux config
bind-key R run-shell -b ' \
  tmux source-file ~/.tmux.conf > /dev/null; \
  tmux display-message "Sourced .tmux.conf!"'

# clear pane
bind-key U send-keys -R
# https://github.com/christoomey/vim-tmux-navigator#restoring-clear-screen-c-l
# bind C-l send-keys 'C-l'

# togggle status bar
bind-key b set status

# scrollback buffer size increase
set -g history-limit 100000

# Use up and down arrows for temporary "maximize"
unbind-key Up; bind-key Up resize-pane -Z; unbind-key Down; bind-key Down resize-pane -Z

# resize panes
bind-key -r H resize-pane -L 10
bind-key -r J resize-pane -D 10
bind-key -r K resize-pane -U 10
bind-key -r L resize-pane -R 10

# theme
if-shell "test -f ~/.tmux/themes/tmux_tokyonight_dark.tmux" "source ~/.tmux/themes/tmux_tokyonight_dark.tmux"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'alexanderjeurissen/tmux-pomodoro'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @open-S 'https://www.duckduckgo.com/'
# o - "open" a highlighted selection with the system default program. open for OS X or xdg-open for Linux
# Ctrl-o - open a highlighted selection with the $EDITOR
# Shift-s - search the highlighted selection directly inside a search engine

set -g @plugin 'tmux-plugins/tmux-copycat'
# prefix + /  - regex search
# prefix + ctrl-u - url search (http, ftp and git urls)
# prefix + option-h - sha search
# Enter - if you're using Tmux vi mode
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'knakayama/tmux-newline-detector'
# remove newline on single line copy
# Default peek key binding is Prefix + P
# Default paste key binding is Prefix + ]

set -g @plugin 'laktak/extrakto'
set -g @extrakto_insert_key "enter"
# prefix + tab - autocomplete

set -g @plugin 'tmux-plugins/tmux-pain-control'
# set -g @plugin 'timtyrrell/apprentice-tmux'

set -g @plugin 'timtyrrell/tmux-spotify-controls'
# set -g @plugin 'timtyrrell/tmux-spotify-display'
# set -g @plugin 'tmux-plugins/tmux-cpu'

set -g @plugin 'tmux-plugins/tmux-resurrect'
# prefix + Ctrl-s - save
# prefix + Ctrl-r - restore
# set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-processes 'false' # don't restore any programs

# keep as last plugin *****************************************
# https://github.com/tmux-plugins/tmux-continuum#known-issues
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'
set -g @continuum-boot 'on'
set -g @continuum-boot-options 'kitty' # autoboot
# keep as last plugin *****************************************

# don't display status if only 1 window
if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"
set-hook -g window-linked 'if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"'
set-hook -g window-unlinked 'if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"'

# Smart pane switching with awareness of Vim splits and fzf.
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim || $is_fzf" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim || $is_fzf" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\\ select-pane -l

# vi config
unbind-key -T copy-mode-vi v
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle \; send -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

# fuzzy select session
bind-key s split-window -v "tmux list-sessions -F '#{session_activity}:#{session_name}' | sort -nr | cut -d ':' -f 2 | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf-tmux -p 90%,90% --reverse --ansi --multi --preview-window=:hidden | xargs tmux switch-client -t"

# bind-key s split-window -v "tmux list-sessions -F '#{session_activity}:#{session_name}' | sort -nr | cut -d ':' -f 2 | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse --no-preview | xargs tmux switch-client -t"

### floating windows

# if true, detach-client (you will be in floating window, so detach from that.. close popup and back to orig)
bind-key g if-shell -F '#{==:#S,dotfiles}' {
    detach-client
} {
    set -gF '@last_session_name' '#S'
    popup -d '#{pane_current_path}' -xC -yC -w95% -h95% -E 'tmux new -A -s dotfiles \
    "tmux set -w pane-border-status off; zsh"'
}

# if true, break-pane (break out the current pane into a new window)
bind-key ! if-shell -F '#{!=:#S,dotfiles}' {
    break-pane
} {
    set -uw pane-border-status
    run-shell -b 'bash -c "tmux break-pane -s dotfiles -t \"$(tmux show -gvq '@last_session_name'):\""'
}

# if true, Same as ! mapping, just that focus does not shift to the broken pane after it moves to new window
bind-key @ if-shell -F '#{!=:#S,dotfiles}' {
    break-pane -d
} {
    set -uw pane-border-status
    run-shell -b 'bash -c "tmux break-pane -d -s dotfiles -t \"$(tmux show -gvq '@last_session_name'):\""'
}

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
